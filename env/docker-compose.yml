version: '2'

services:

# Source code
  source-code-container:
    container_name: support_source-code-container_11
    build:
      context: ./container-source-code
    ports:
      - "4848:22"
    volumes:
      - src:/var/www
      - db:/var/run/mysqld/
      - redis:/var/run/redis/
      - ./conf/composer/auth.json:/root/.composer/auth.json:ro
      - ./conf/smtp/msmtprc:/etc/msmtprc:ro
      - ./supportTools/restore/restore.sh:/usr/local/bin/restore.sh:ro
      - ./supportTools/restore/restore.conf:/usr/local/bin/.restore.conf:ro
      - ./supportTools/m2install/m2install.sh:/usr/local/bin/m2install.sh:ro
      - ./supportTools/m2install/m2install.conf:/usr/local/bin/.m2install.conf:ro
      - ./supportTools/reloadPhpFpmIni.sh:/usr/local/bin/reloadPhpFpmIni.sh:ro
      - ./supportTools/xdebug-php.sh:/usr/local/bin/xdebug-php.sh:ro
      - ./supportTools/tideways-php.sh:/usr/local/bin/tideways-php.sh:ro
      - ./supportTools/ioncube-php.sh:/usr/local/bin/ioncube-php.sh:ro

  db-data-container:
    container_name: support_db-data-container_11
    build:
      context: ./container-db-data
    ports:
      - "4949:22"
    volumes:
      - db-data:/var/lib/mysql

## Apache
  web:
    container_name: support_web_11
    image: httpd:2.4
    ports:
      - "443:443"
      - "80:80"    # Comment with Enabled Varnish, Uncomment with Disabled Varnish
#      - "8080:80"  # Uncomment with Enabled Varnish
#    expose:         # Uncomment with Enabled Varnish
#      - 80          # Uncomment with Enabled Varnish
    links:
      - php56
      - php70
      - php71
    depends_on:
      - mysql56
    networks:
      default:
        aliases:
          - "magento1.local"
          - "php56.magento1.local"
          - "php70.magento1.local"
          - "magento2.local"
          - "php56.magento2.local"
          - "php70.magento2.local"
    command: bash -c "/usr/local/bin/entrypoint.sh"
    volumes_from:
      - source-code-container:ro
    volumes:
      - ./conf/httpd/entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
      - ./conf/httpd/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
      - ./conf/httpd/conf/extra/httpd-ssl.conf:/usr/local/apache2/conf/extra/httpd-ssl.conf:ro
      - ./conf/httpd/conf/extra/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf:ro
      - ./conf/httpd/conf/extra/httpd-caching.conf:/usr/local/apache2/conf/extra/httpd-caching.conf:ro
      - ./conf/httpd/conf/extra/httpd-compresion.conf:/usr/local/apache2/conf/extra/httpd-compresion.conf:ro
      - ./conf/httpd/ssl:/usr/local/apache2/conf/ssl/:ro


## Varnish cache
#  varnish:
#    container_name: support_varnish_11
#    restart: always
#    image: million12/varnish
#    links:
#      - web
#    environment:
#      - 'VCL_CONFIG=/etc/varnish/default.vcl'
#      - 'CACHE_SIZE=256m'
#      - 'VARNISHD_PARAMS=-p default_ttl=3600 -p default_grace=3600'
#    volumes_from:
#      - web
#    volumes:
#      - ./conf/varnish/default.vcl:/etc/varnish/default.vcl:ro
#    ports:
#      - "80:80"


## PHP
  php56:
    container_name: support_php56_11
    build:
      context: ./php/php56
      args:
        php_ext: bcmath curl dom json iconv intl mbstring mcrypt opcache pdo pdo_mysql session simplexml soap sockets xml xmlrpc xsl zip pcntl
    links:
      - redis
      - mysql56:db
      - mailcatcher
      - mongo # we need it for xhprof
    volumes_from:
      - source-code-container
    ports:
      - "2231:22"

  php70:
    container_name: support_php70_11
    build:
      context: ./php/php70
      args:
        php_ext: bcmath curl dom json iconv intl mbstring mcrypt opcache pdo pdo_mysql session simplexml soap sockets xml xmlrpc xsl zip pcntl
    links:
      - redis
      - mysql56:db
      - mailcatcher
      - mongo # we need it for xhprof
      - rabbit
    volumes_from:
      - source-code-container
    ports:
      - "2232:22"

  php70w1:
    container_name: worker_php70_1
    build:
      context: ./php/php70
      args:
        php_ext: bcmath curl dom json iconv intl mbstring mcrypt opcache pdo pdo_mysql session simplexml soap sockets xml xmlrpc xsl zip pcntl
    links:
      - redis
      - mysql56:db
      - mailcatcher
      - mongo # we need it for xhprof
      - rabbit
    volumes_from:
      - source-code-container
    ports:
      - "2322:22"

  php71:
    container_name: support_php71_11
    build:
      context: ./php/php71
      args:
        php_ext: bcmath curl dom json iconv intl mbstring mcrypt opcache pdo pdo_mysql session simplexml soap sockets xml xmlrpc xsl zip pcntl
    links:
      - redis
      - mysql56:db
      - mailcatcher
      - mongo # we need it for xhprof
    volumes_from:
      - source-code-container
    ports:
      - "2233:22"


## CACHES
  redis:
    container_name: support_redis_11
    image: redis
    volumes:
      - redis:/var/run/redis/
      - ./conf/redis/redis.conf:/etc/redis.conf:ro
    command: bash -c "redis-server /etc/redis.conf"


## DB
  mysql56:
    container_name: support_mysql56_11
    image: mysql:5.6
    env_file:
      - ./conf/db/mysql.env
    volumes_from:
      - db-data-container
    volumes:
      - db:/var/run/mysqld/
      - ./conf/db/.my.cnf:/root/.my.cnf:ro
      - ./conf/db/etc/mysql/conf.d/:/etc/mysql/conf.d/

## Jobs/ Queues
  rabbit:
    container_name: support_rabbit_11
    restart: always
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=magento2
      - RABBITMQ_DEFAULT_PASS=magento2
    ports:
      - "15672:15672"
      - "5672:5672"

## Search engines
#  solr:
#    container_name: support_solr_11
#    build:
#      context: ./solr36
#      args:
#        SOLR_VERSION: "3.6.2"
#        SOLR_KEY: "322D7ECA"
#        SOLR_SOURCE_SHA256_HASH: "3a1a40542670ea6efec246a081053732c5503ec1"
#    ports:
#      - "8983:8983"

  elasticsearch:
    container_name: support_elasticsearch_2
    restart: always
    image: elasticsearch:2.4
    ports:
      - "9200:9200"
    volumes:
      - ./conf/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro

#  elasticsearch:
#    container_name: support_elasticsearch_5
#    restart: always
#    image: elasticsearch:5.6
#    ports:
#      - "9200:9200"
#    volumes:
#      - ./conf/elasticsearch/config/elasticsearch5.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro


## Email
  mailcatcher:
    container_name: support_mailcatcher
    image: schickling/mailcatcher
    expose:
      - 1025
    ports:
      - "1080:1080"

# OTHERS

## We need Mongo for xhprof
  mongo:
    container_name: support_mongo_11
    image: mongo:3.2

volumes:
  db: {}
  redis: {}
  src: {}
  db-data: {}
